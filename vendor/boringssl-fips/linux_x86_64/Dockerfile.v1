# Dockerfile for the image used to pre-compile the FIPS-compliant boringssl library
# We use this because the latest FIPS-certified boringssl build requires an old
# clang version that we don't want to use in our general toolchain.

# Pull base image.
FROM ubuntu:18.04

RUN apt-get update
RUN apt-get install -y curl build-essential software-properties-common gccgo-5 tar wget git xz-utils

#install latest rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none -y
ENV PATH=/root/.cargo/bin/:$PATH
RUN rustup default stable

#install cmake
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add -
RUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' && apt-get update
RUN apt install -y cmake

#install go v1.16.5
ENV GOROOT_BOOTSTRAP=/usr./make.bash
RUN wget https://go.dev/dl/go1.16.5.linux-amd64.tar.gz
RUN tar -xzvf go1.16.5.linux-amd64.tar.gz
ENV PATH=/go/bin/:$PATH
ENV GOROOT=/go/

#install clang v12.0.0
RUN apt-get remove clang
RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz
RUN tar -xvf clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz
RUN mv clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-16.04 /usr/local/clang_12.0.0
RUN ln -s clang /usr/local/clang_12.0.0/bin/clang++-12
ENV LD_LIBRARY_PATH=/usr/local/clang_12.0.0/lib
ENV PATH=/usr/local/clang_12.0.0/bin:$PATH

#build boringssl
RUN git clone https://github.com/PiotrSikora/boring.git -b boringcrypto_4407
ENV PATH=/root/.cargo/bin/:$PATH
RUN cd boring/boring-sys/ && cargo build --release --features fips
